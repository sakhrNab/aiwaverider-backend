version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: backend_prod
    # Remove direct port exposure as nginx will handle this
    # ports:
    #   - "8080:8080"
    env_file:
      - .env.production # Load production environment variables
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/usr/src/app/server/aiwaverider8-privatekey.json
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_TLS=false
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app_network_backend_prod # Use a production-specific network
    volumes:
      - ./server:/usr/src/app/server

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx_prod
    ports:
      - "81:80"  # Map external port 81 to internal port 80 for HTTP
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app_network_backend_prod

  redis:
    image: redis:7-alpine
    container_name: redis_prod
    # For production, consider not exposing Redis port directly to the host if not needed
    # ports:
    #  - "6379:6379" 
    command: redis-server --save 60 1 --loglevel warning # Example persistence config
    # If your Redis needs a password, set it via config file or command:
    # command: redis-server --requirepass YOUR_REDIS_PASSWORD
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    networks:
      - app_network_backend_prod

volumes:
  redis_prod_data:

networks:
  app_network_backend_prod:
    driver: bridge